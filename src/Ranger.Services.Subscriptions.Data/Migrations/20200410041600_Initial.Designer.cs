// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ranger.Services.Subscriptions.Data;

namespace Ranger.Services.Subscriptions.Data.Migrations
{
    [DbContext(typeof(SubscriptionsDbContext))]
    [Migration("20200410041600_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FriendlyName")
                        .HasColumnName("friendly_name")
                        .HasColumnType("text");

                    b.Property<string>("Xml")
                        .HasColumnName("xml")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_data_protection_keys");

                    b.ToTable("data_protection_keys");
                });

            modelBuilder.Entity("Ranger.Services.Subscriptions.Data.TenantSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("PlanId")
                        .IsRequired()
                        .HasColumnName("plan_id")
                        .HasColumnType("text");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnName("subscription_id")
                        .HasColumnType("text");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnName("tenant_id")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_tenant_subscriptions");

                    b.HasIndex("SubscriptionId")
                        .IsUnique();

                    b.HasIndex("TenantId")
                        .IsUnique();

                    b.ToTable("tenant_subscriptions");
                });

            modelBuilder.Entity("Ranger.Services.Subscriptions.Data.UtilizationDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AccountCount")
                        .HasColumnName("account_count")
                        .HasColumnType("integer");

                    b.Property<int>("GeofenceCount")
                        .HasColumnName("geofence_count")
                        .HasColumnType("integer");

                    b.Property<int>("IntegrationCount")
                        .HasColumnName("integration_count")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectCount")
                        .HasColumnName("project_count")
                        .HasColumnType("integer");

                    b.Property<int>("TenantSubscriptionId")
                        .HasColumnName("tenant_subscription_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_utilization_details");

                    b.HasIndex("TenantSubscriptionId")
                        .IsUnique()
                        .HasName("ix_utilization_details_tenant_subscription_id");

                    b.ToTable("utilization_details");
                });

            modelBuilder.Entity("Ranger.Services.Subscriptions.Data.UtilizationDetails", b =>
                {
                    b.HasOne("Ranger.Services.Subscriptions.Data.TenantSubscription", "TenantSubscription")
                        .WithOne("UtilizationDetails")
                        .HasForeignKey("Ranger.Services.Subscriptions.Data.UtilizationDetails", "TenantSubscriptionId")
                        .HasConstraintName("fk_utilization_details_tenant_subscriptions_tenant_subscriptio~")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
